{"version":3,"sources":["data/data.js","assets/bingo.png","assets/chickenWinner.png","assets/winnerBell.flac","components/MainContent.jsx","components/App.js","index.js"],"names":["slots","id","text","selected","positions","x","y","bell","UIfx","winnerBell","MainContent","props","updateWindowDimensions","setState","height","window","innerHeight","width","innerWidth","shuffleAndSetRandomPosition","positionsrandom","sort","Math","random","slotsArray","i","length","number","validateBingo","checkedSlotsArray","winner","filter","slot","play","clickSlot","xPosition","yPosition","state","forEach","splice","push","restart","randomSlots","obj","renderHeader","slotsRow","letter","rowSlot","className","renderSlots","bingoCard","row","bingoCardRow","column","slotInfo","onClick","newSlotsArray","this","addEventListener","wind","recycle","run","centered","visible","footer","onOk","onCancel","style","textAlign","src","chickenWinner","alt","bingo","type","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33aa2d2e.chunk.js","sourcesContent":["export const slots = [\r\n   {\r\n      id: 1,\r\n      text: \"(Child noises in the background)\",\r\n      selected: false,\r\n   },\r\n   {\r\n      id: 2,\r\n      text: \"Hello, hello?\",\r\n      selected: false,\r\n   },\r\n   {\r\n      id: 3,\r\n      text: \"You have the mic muted\",\r\n      selected: false,\r\n   },\r\n   {\r\n      id: 4,\r\n      text: \"Can everyone go on mute\",\r\n      selected: false,\r\n   },\r\n   {\r\n      id: 5,\r\n      text: \"Could you please get closer to the mic\",\r\n      selected: false,\r\n   },\r\n   {\r\n      id: 6,\r\n      text: \"(load painful echo / feedback)\",\r\n      selected: false,\r\n   },\r\n   {\r\n      id: 7,\r\n      text: \"Next slide, please\",\r\n      selected: false,\r\n   },\r\n   {\r\n      id: 8,\r\n      text: \"Can we take this offline\",\r\n      selected: false,\r\n   },   \r\n   {\r\n      id: 9,\r\n      text: \"Is ___ on the call?\",\r\n      selected: false,\r\n   },\r\n   {\r\n      id: 10,\r\n      text: \"Could you share this slides afterwards?\",\r\n      selected: false,\r\n   },\r\n   {\r\n      id: 11,\r\n      text: \"Can somebody grant presenter rights?\",\r\n      selected: false,\r\n   },\r\n   {\r\n      id: 12,\r\n      text: \"Can you email that to everyone\",\r\n      selected: false,\r\n   },\r\n   {\r\n      id: 13,\r\n      text: \"REMEMBER YOUR BINGO MASK!\",\r\n      selected: false,\r\n   },\r\n   {\r\n      id: 14,\r\n      text: \"Sorry, I had problems loging in\",\r\n      selected: false,\r\n   },\r\n   {\r\n      id: 15,\r\n      text: \"(Animal noises in the background)\",\r\n      selected: false,\r\n   },\r\n   {\r\n      id: 16,\r\n      text: \"Sorry, I didn't found the conference id\",\r\n      selected: false,\r\n   },\r\n   {\r\n      id: 17,\r\n      text: \"I was having connection issues\",\r\n      selected: false,\r\n   },\r\n   {\r\n      id: 18,\r\n      text: \"I'll have to get back to you\",\r\n      selected: false,\r\n   },\r\n   {\r\n      id: 19,\r\n      text: \"Who just joined?\",\r\n      selected: false,\r\n   },\r\n   {\r\n      id: 20,\r\n      text: \"Sorry, something _____ with my calendar\",\r\n      selected: false,\r\n   },\r\n   {\r\n      id: 21,\r\n      text: \"Do you see my screen?\",\r\n      selected: false,\r\n   },\r\n   {\r\n      id: 22,\r\n      text: \"Lets wait for ____ !\",\r\n      selected: false,\r\n   },\r\n   {\r\n      id: 23,\r\n      text: \"You will send the minutes?\",\r\n      selected: false,\r\n   },\r\n   {\r\n      id: 24,\r\n      text: \"Sorry, I was on mute\",\r\n      selected: false,\r\n   },\r\n   {\r\n      id: 25,\r\n      text: \"Can you repeat, please?\",\r\n      selected: false,\r\n   }\r\n]\r\n\r\nexport const positions = [\r\n   {\r\n      x: 1,\r\n      y: 1\r\n   },\r\n   {\r\n      x: 1,\r\n      y: 2\r\n   },\r\n   {\r\n      x: 1,\r\n      y: 3\r\n   },\r\n   {\r\n      x: 1,\r\n      y: 4\r\n   },\r\n   {\r\n      x: 1,\r\n      y: 5\r\n   },\r\n   {\r\n      x: 2,\r\n      y: 1\r\n   },\r\n   {\r\n      x: 2,\r\n      y: 2\r\n   },\r\n   {\r\n      x: 2,\r\n      y: 3\r\n   },   \r\n   {\r\n      x: 2,\r\n      y: 4\r\n   },\r\n   {\r\n      x: 2,\r\n      y: 5\r\n   },\r\n   {\r\n      x: 3,\r\n      y: 1\r\n   },\r\n   {\r\n      x: 3,\r\n      y: 2\r\n   },\r\n   {\r\n      x: 3,\r\n      y: 3\r\n   },\r\n   {\r\n      x: 3,\r\n      y: 4\r\n   },\r\n   {\r\n      x: 3,\r\n      y: 5\r\n   },\r\n   {\r\n      x: 4,\r\n      y: 1\r\n   },\r\n   {\r\n      x: 4,\r\n      y: 2\r\n   },\r\n   {\r\n      x: 4,\r\n      y: 3\r\n   },\r\n   {\r\n      x: 4,\r\n      y: 4\r\n   },\r\n   {\r\n      x: 4,\r\n      y: 5\r\n   },\r\n   {\r\n      x: 5,\r\n      y: 1\r\n   },\r\n   {\r\n      x: 5,\r\n      y: 2\r\n   },\r\n   {\r\n      x: 5,\r\n      y: 3\r\n   },\r\n   {\r\n      x: 5,\r\n      y: 4\r\n   },\r\n   {\r\n      x: 5,\r\n      y: 5\r\n   },\r\n]","export default __webpack_public_path__ + \"static/media/bingo.ca7e6f7e.png\";","export default __webpack_public_path__ + \"static/media/chickenWinner.b2643e9d.png\";","export default __webpack_public_path__ + \"static/media/winnerBell.63448eba.flac\";","import React, { Component } from 'react';\r\nimport { Modal, Button } from 'antd';\r\nimport Confetti from 'react-confetti'\r\nimport UIfx from 'uifx'\r\n\r\n// Style\r\nimport './MainContent.css'\r\nimport 'antd/dist/antd.css';\r\n\r\n// Data\r\nimport { slots, positions } from '../data/data'\r\nimport bingo from \"../assets/bingo.png\"\r\nimport chickenWinner from \"../assets/chickenWinner.png\"\r\nimport winnerBell from \"../assets/winnerBell.flac\"\r\n\r\nconst bell = new UIfx(\r\n   winnerBell,\r\n)\r\n\r\nclass MainContent extends Component {\r\n\r\n   constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n         slotsArray: [],\r\n         checkedSlotsArray: [{\r\n            id: 13,\r\n            text: \"REMEMBER YOUR BINGO MASK!\",\r\n            selected: false,\r\n            x: 3,\r\n            y: 3\r\n         }],\r\n         winner: false,\r\n         height: 0,\r\n         width: 0\r\n      }\r\n   }\r\n\r\n   componentDidMount() {\r\n      const newSlotsArray = this.shuffleAndSetRandomPosition()\r\n\r\n      this.setState({\r\n         slotsArray: newSlotsArray\r\n      })\r\n      this.updateWindowDimensions();\r\n      window.addEventListener('resize', this.updateWindowDimensions);\r\n   }\r\n\r\n   // Functions\r\n   updateWindowDimensions = () => {\r\n      this.setState({\r\n         height: window.innerHeight,\r\n         width: window.innerWidth\r\n      });\r\n   }\r\n\r\n   shuffleAndSetRandomPosition = () => {\r\n      const positionsrandom = positions.sort(() => Math.random() - 0.5)\r\n      const slotsArray = slots;\r\n\r\n      for (let i = 0; i < positionsrandom.length; i++) {\r\n         slotsArray[i].x = positionsrandom[i].x\r\n         slotsArray[i].y = positionsrandom[i].y\r\n         slotsArray[i].number = positionsrandom;\r\n      }\r\n\r\n      const newArray = slotsArray\r\n\r\n      return newArray\r\n   }\r\n\r\n   validateBingo = (checkedSlotsArray) => {\r\n      let winnerRow = []\r\n      let winner = false\r\n\r\n      // Validate row and column winner\r\n      for (let i = 1; i <= 5; i++) {\r\n         winnerRow = checkedSlotsArray.filter(slot => slot.x === i);\r\n\r\n         if (winnerRow.length === 5) {\r\n            winner = true\r\n            break;\r\n         }\r\n\r\n         winnerRow = checkedSlotsArray.filter(slot => slot.y === i);\r\n\r\n         if (winnerRow.length === 5) {\r\n            winner = true\r\n            break;\r\n         }\r\n\r\n         winnerRow = checkedSlotsArray.filter(slot => (\r\n            (slot.x === 1 && slot.y === 1) ||\r\n            (slot.x === 2 && slot.y === 2) ||\r\n            (slot.x === 3 && slot.y === 3) ||\r\n            (slot.x === 4 && slot.y === 4) ||\r\n            (slot.x === 5 && slot.y === 5)\r\n         ));\r\n\r\n         if (winnerRow.length === 5) {\r\n            winner = true\r\n            break;\r\n         }\r\n\r\n         winnerRow = checkedSlotsArray.filter(slot => (\r\n            (slot.x === 5 && slot.y === 1) ||\r\n            (slot.x === 4 && slot.y === 2) ||\r\n            (slot.x === 3 && slot.y === 3) ||\r\n            (slot.x === 2 && slot.y === 4) ||\r\n            (slot.x === 1 && slot.y === 5)\r\n         ));\r\n\r\n         if (winnerRow.length === 5) {\r\n            winner = true\r\n            break;\r\n         }\r\n      }\r\n\r\n      this.setState({\r\n         winner\r\n      })\r\n\r\n      if (winner) {\r\n         bell.play()\r\n      }\r\n   }\r\n\r\n   // Events\r\n   clickSlot = (xPosition, yPosition) => {\r\n      const { slotsArray } = { ...this.state }\r\n      const { checkedSlotsArray } = { ...this.state }\r\n\r\n      slotsArray.forEach(slot => {\r\n         if (slot.x === xPosition && slot.y === yPosition) {\r\n            if (!slot.selected) {\r\n               slot.selected = true\r\n               checkedSlotsArray.push(slot)\r\n            } else {\r\n               slot.selected = false\r\n               for (let i = 0; i < checkedSlotsArray.length; i++) {\r\n                  if (checkedSlotsArray[i].id === slot.id) {\r\n                     checkedSlotsArray.splice(i, 1);\r\n                     break;\r\n                  }\r\n               }\r\n            }\r\n         }\r\n      })\r\n\r\n      this.setState({\r\n         slotsArray,\r\n         checkedSlotsArray\r\n      })\r\n\r\n      if (checkedSlotsArray.length > 3) {\r\n         this.validateBingo(checkedSlotsArray)\r\n      }\r\n   }\r\n\r\n   restart = () => {\r\n      const randomSlots = this.shuffleAndSetRandomPosition()\r\n\r\n      randomSlots.forEach(obj => obj.selected = false)\r\n\r\n      this.setState({\r\n         slotsArray: randomSlots,\r\n         checkedSlotsArray: [\r\n            {\r\n               id: 13,\r\n               text: \"REMEMBER YOUR BINGO MASK!\",\r\n               selected: false,\r\n               x: 3,\r\n               y: 3\r\n            }\r\n         ],\r\n         winner: false\r\n      })\r\n   }\r\n\r\n   // Info to render\r\n   renderHeader = () => {\r\n      const columns = 5;\r\n      const slotsRow = [];\r\n      let letter = null;\r\n\r\n      for (let slot = 1; slot <= columns; slot++) {\r\n         switch (slot) {\r\n            case 1:\r\n               letter = \"B\";\r\n               break;\r\n            case 2:\r\n               letter = \"I\";\r\n               break;\r\n            case 3:\r\n               letter = \"N\";\r\n               break;\r\n            case 4:\r\n               letter = \"G\";\r\n               break;\r\n            default:\r\n               letter = \"O\";\r\n               break;\r\n         }\r\n         const rowSlot =\r\n            <th\r\n               key={slot}\r\n               className=\"headerSlot\"\r\n            >\r\n               <h3>\r\n                  {letter}\r\n               </h3>\r\n            </th>\r\n\r\n         slotsRow.push(rowSlot)\r\n      }\r\n      return slotsRow\r\n   }\r\n\r\n   renderSlots = () => {\r\n      const { slotsArray } = this.state\r\n      const maxRows = 5;\r\n      const maxColumns = 5;\r\n      const bingoCard = [];\r\n\r\n      // Print all the slots to show the Bingo card\r\n      for (let row = 1; row <= maxRows; row++) {\r\n         const bingoCardRow = [];\r\n         for (let column = 1; column <= maxColumns; column++) {\r\n\r\n            const slotInfo = slotsArray.filter(slot => slot.x === row && slot.y === column)\r\n            let slot = null;\r\n\r\n            if (slotInfo[0].x !== 3 || slotInfo[0].y !== 3) {\r\n               slot =\r\n                  <td\r\n                     key={slotInfo[0].id}\r\n                     className={slotInfo[0].selected ? \"checkedSlot\" : \"slotNotChecked\"}\r\n                     onClick={() => this.clickSlot(row, column)}\r\n                  >\r\n                     <div className=\"row slot\">\r\n                        {slotInfo[0].text}\r\n                        <p className=\"row slotNumber\">{slotInfo[0].id}</p>\r\n                     </div>\r\n                  </td>\r\n            } else {\r\n               slot =\r\n                  <td\r\n                     key={slotInfo[0].id}\r\n                     className=\"centralSlot\"\r\n                  >\r\n                     <div className=\"row slot\">\r\n                        {slotInfo[0].text}\r\n                        <p className=\"row slotNumber\">{slotInfo[0].id}</p>\r\n                     </div>\r\n                  </td>\r\n            }\r\n\r\n            bingoCardRow.push(slot)\r\n         }\r\n         bingoCard.push(<tr key={row}>{bingoCardRow}</tr>)\r\n      }\r\n      return bingoCard;\r\n   }\r\n\r\n   render() {\r\n      const { slotsArray, winner, height, width } = this.state\r\n      return (\r\n         <div className='bingo'>\r\n            {\r\n               winner &&\r\n               <Confetti\r\n                  width={width}\r\n                  height={height}\r\n                  wind={0.05}\r\n                  recycle\r\n                  run\r\n               />\r\n            }\r\n\r\n            <Modal\r\n               centered\r\n               visible={winner}\r\n               footer={[\r\n                  <Button key=\"back\" onClick={() => this.restart()}>\r\n                     Ok\r\n                  </Button>\r\n               ]}\r\n               onOk={() => this.restart()}\r\n               onCancel={() => this.restart()}\r\n            >\r\n               <div style={{ textAlign: \"center\" }}>\r\n                  <img src={chickenWinner} alt={\"Winner\"} />\r\n                  <h2 className=\"winnerMessage\">You have won our magnificent BINGO!</h2>\r\n               </div>\r\n            </Modal>\r\n\r\n            <div className=\"row\">\r\n               <img src={bingo} width={\"80%\"} height={\"150px\"} alt={\"Bingo\"} />\r\n            </div>\r\n\r\n            {\r\n               slotsArray.length > 0 &&\r\n               /* Bingo card */\r\n               <div className=\"row bingoCard\">\r\n                  <table className=\"table\">\r\n                     <thead>\r\n                        {this.renderHeader()}\r\n                     </thead>\r\n                     <tbody>\r\n                        {this.renderSlots()}\r\n                     </tbody>\r\n                  </table>\r\n               </div>\r\n            }\r\n\r\n            <div className=\"row restartButton\">\r\n               <div className=\"col-11\">\r\n                  <Button type=\"primary\" onClick={this.restart}>Restart</Button>\r\n               </div>\r\n               <div className=\"col-1\">\r\n                  Sound up\r\n               </div>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default MainContent;\r\n","import './App.css';\nimport MainContent from './MainContent.jsx'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainContent />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}